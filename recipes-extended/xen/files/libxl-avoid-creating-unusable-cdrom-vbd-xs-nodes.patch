################################################################################
SHORT DESCRIPTION:
################################################################################
Don't create useless CDROM VBD nodes in xenstore

################################################################################
LONG DESCRIPTION:
################################################################################
blkfront doesn't support CDROMs in HVMs. However, XL creates guest CDROM VBD
nodes for the virtual CD, when it only makes sense for their stubdoms. XL also
creates stubdom and guest nodes for atapi-pt drives, which doesn't make sense.
To summarize, the creation of guest virtual cd nodes and all atapi-pt nodes
should be removed from XL.

################################################################################
CHANGELOG
################################################################################
Authors:
Mahantesh Salimath<salimathm@ainfosec.com>

################################################################################
--- a/tools/libxl/libxl_create.c
+++ b/tools/libxl/libxl_create.c
@@ -1312,7 +1312,7 @@ static void domcreate_rebuild_done(libxl
 
     /* convenience aliases */
     const uint32_t domid = dcs->guest_domid;
-    libxl_domain_config *const d_config = dcs->guest_config;
+    libxl_domain_config *d_config = dcs->guest_config;
 
     if (ret) {
         LOGD(ERROR, domid, "cannot (re-)build domain: %d", ret);
@@ -1322,6 +1322,40 @@ static void domcreate_rebuild_done(libxl
 
     store_libxl_entry(gc, domid, &d_config->b_info);
 
+    /* Remove disks that will not require xenstore vbd nodes from the domain
+     * configuration. */
+    if (d_config->c_info.type == LIBXL_DOMAIN_TYPE_HVM) {
+        unsigned int i = 0;
+        bool stubdomain =
+            libxl_defbool_val(d_config->b_info.device_model_stubdomain);
+
+        while (i < d_config->num_disks) {
+            /* - The stubdomain already has the required configuration to get
+             *   the blkfront disk for QEMU to access the cdrom image
+             * - ATAPI-PT uses the atapi-helper to access the hardware
+             *   ATAPI device, no need for the vbd nodes either.
+             */
+            if (d_config->disks[i].is_cdrom &&
+                (stubdomain ||
+                !strcmp(d_config->disks[i].vdev, "atapi-pt"))) {
+                /* if last disk just remove it,
+                 * otherwise replace with the last one in the array and restart
+                 * from there. */
+                libxl_device_disk_dispose(&d_config->disks[i]);
+                if (i != d_config->num_disks - 1)
+                    libxl_device_disk_copy(CTX,
+                        &d_config->disks[i],
+                        &d_config->disks[d_config->num_disks - 1]);
+                --d_config->num_disks;
+            } else
+                ++i;
+        }
+
+        d_config->disks =
+            libxl__realloc(NOGC, d_config->disks,
+                           d_config->num_disks * sizeof (d_config->disks[0]));
+    }
+
     libxl__multidev_begin(ao, &dcs->multidev);
     dcs->multidev.callback = domcreate_launch_dm;
     libxl__add_disks(egc, ao, domid, d_config, &dcs->multidev);
