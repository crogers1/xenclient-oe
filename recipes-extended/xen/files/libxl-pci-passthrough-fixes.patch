################################################################################
SHORT DESCRIPTION:
################################################################################
Fix PCI passthrough for guests that use a stubdomain

################################################################################
LONG DESCRIPTION:
################################################################################
2 fixes here:
* Don't try to add PCI devices to the stubdom config file, they don't have one
* Wait until pcifront in the stubdom enables the device before sending a QMP
  message to QEMU to start probing the device

################################################################################
CHANGELOG
################################################################################
Authors:
Jed Lejosne <lejosnej@ainfosec.com>

Chris
 - Maybe don't need xswait hunk with xl logic in latest

################################################################################
REMOVAL
################################################################################
Remove when upstreamed...

################################################################################
UPSTREAM PLAN
################################################################################
Both fixes should be upstreamed.

################################################################################
INTERNAL DEPENDENCIES
################################################################################

################################################################################
PATCHES
################################################################################
--- a/tools/libxl/libxl_device.c
+++ b/tools/libxl/libxl_device.c
@@ -2131,6 +2131,32 @@ void libxl__device_list_free(const struc
     free(list);
 }
 
+int libxl__wait_for_backend_device(libxl__gc *gc, const char *be_path,
+                                       int id, const char *state)
+{
+    int watchdog = 100;
+    const char *p, *path = GCSPRINTF("%s/state-%d", be_path, id);
+    int rc;
+
+    while (watchdog-- > 0) {
+        rc = libxl__xs_read_checked(gc, XBT_NULL, path, &p);
+        if (rc) return rc;
+
+        if (p == NULL) {
+            LOG(ERROR, "Backend %s does not exist", be_path);
+            return ERROR_FAIL;
+        }
+
+        usleep(100000);
+
+        if (!strcmp(p, state))
+            return 0;
+    }
+
+    LOG(ERROR, "Backend %s not ready", be_path);
+    return ERROR_FAIL;
+}
+
 /*
  * Local variables:
  * mode: C
--- a/tools/libxl/libxl_internal.h
+++ b/tools/libxl/libxl_internal.h
@@ -1374,6 +1374,8 @@ _hidden int libxl__parse_backend_path(li
 _hidden int libxl__device_destroy(libxl__gc *gc, libxl__device *dev);
 _hidden int libxl__wait_for_backend(libxl__gc *gc, const char *be_path,
                                     const char *state);
+_hidden int libxl__wait_for_backend_device(libxl__gc *gc, const char *be_path,
+                                       int id, const char *state);
 _hidden int libxl__nic_type(libxl__gc *gc, libxl__device *dev,
                             libxl_nic_type *nictype);
 _hidden int libxl__init_console_from_channel(libxl__gc *gc,
--- a/tools/libxl/libxl_pci.c
+++ b/tools/libxl/libxl_pci.c
@@ -171,8 +174,11 @@ static int libxl__device_pci_add_xenstor
         if (rc) goto out;

         if (lock) {
-            rc = libxl__set_domain_configuration(gc, domid, &d_config);
-            if (rc) goto out;
+            /* Stubdoms don't have a configuration file */
+            if (!is_stubdomain) {
+                rc = libxl__set_domain_configuration(gc, domid, &d_config);
+                if (rc) goto out;
+            }
         }

         libxl__xs_writev(gc, t, be_path, libxl__xs_kvs_of_flexarray(gc, back));
